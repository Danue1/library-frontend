image: python:3.6

stages:
  - build
  - deploy

.aws-docker: &aws-docker
  image: ridibooks/gitlab-ci-docker-aws:latest

before_script:
  - apk add nodejs yarn

build:
  <<: *aws-docker
  stage: build
  only:
    - master
  script:
    - export TAG=${CI_COMMIT_SHA::8}
    - sh docs/script/export.sh

    - make global-python-package-install

    - make ci-settings ns=development
    - AWS_ACCESS_KEY_ID=$DEV_AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$DEV_AWS_SECRET_ACCESS_KEY S3_PATH=$DEV_S3_PATH sh docs/script/upload.sh
    - ENVIRONMENT=development docker-compose -f ./docs/docker/compose/build.yml build

    - AWS_ACCESS_KEY_ID=$PROD_AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$PROD_AWS_SECRET_ACCESS_KEY S3_PATH=$PROD_S3_PATH sh docs/script/upload.sh
    - make ci-settings ns=production
    - ENVIRONMENT=production docker-compose -f ./docs/docker/compose/build.yml build

    - AWS_ACCESS_KEY_ID=$PROD_AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$PROD_AWS_SECRET_ACCESS_KEY S3_PATH=$PROD_S3_PATH sh docs/script/upload.sh
    - make ci-settings ns=staging
    - ENVIRONMENT=staging docker-compose -f ./docs/docker/compose/build.yml build

.deployment-template: &deployment
  <<: *aws-docker
  stage: deploy
  when: manual
  only:
    - master
  script:
    - export TAG=${CI_COMMIT_SHA::8}
    - '`aws ecr get-login --no-include-email --region=$AWS_DEFAULT_REGION`'
    - sh docs/script/push.sh
    - sh docs/script/deploy.sh

development:
  <<: *deployment
  variables:
    ENVIRONMENT: 'development'
    ECR_REPO_URL: $DEV_LIBRARY_ECR
    AWS_ACCESS_KEY_ID: $DEV_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $DEV_AWS_SECRET_ACCESS_KEY

staging:
  <<: *aws-docker
  stage: deploy
  when: manual
  only:
    - master
  variables:
    ENVIRONMENT: 'staging'
    ECR_REPO_URL: $PROD_LIBRARY_ECR
    AWS_ACCESS_KEY_ID: $PROD_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $PROD_AWS_SECRET_ACCESS_KEY
    RIDI_TOKEN_AUTHORIZE_URL: $PROD_LOGIN_URL
    RIDI_OAUTH2_CLIENT_ID: $PROD_CLIENT_ID
    RIDI_OAUTH2_JWT_SECRET: $PROD_JWT_SECRET
  script:
    - export TAG=${CI_COMMIT_SHA::8}
    - '`aws ecr get-login --no-include-email --region=$AWS_DEFAULT_REGION`'
    - sh docs/script/push.sh
    - sh docs/script/staging_deploy.sh

production:
  <<: *deployment
  variables:
    ENVIRONMENT: 'production'
    ECR_REPO_URL: $PROD_LIBRARY_ECR
    AWS_ACCESS_KEY_ID: $PROD_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $PROD_AWS_SECRET_ACCESS_KEY
    RIDI_TOKEN_AUTHORIZE_URL: $PROD_LOGIN_URL
    RIDI_OAUTH2_CLIENT_ID: $PROD_CLIENT_ID
    RIDI_OAUTH2_JWT_SECRET: $PROD_JWT_SECRET
